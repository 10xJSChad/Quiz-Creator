{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","screen","this","setState","className","onClick","changeScreen","React","Component","QuizCreator","questions","question","start","onChange","bind","InputBox","addQuestion","setAnswer","startQuiz","value","index","render","answer","val","style","backgroundColor","e","type","target","push","code","forEach","element","createCode","AnswerButton","QuizImport","event","quiz","current","split","parseImport","Quiz","correct","checkAndIncrement","length","data","QuestionBox","guess","GiveAnswer","buttonClass","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b36a829.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      screen: 0,\n    }\n  }\n  \n  changeScreen(screen){\n    this.setState({\n      screen: screen,\n    })\n  }\n\n  render(){\n    //TODO: Convert to switch\n    if(this.state.screen == 1) return(<QuizCreator/>)\n    if(this.state.screen == 2) return(<QuizImport/>)\n\n    return(\n        <div className=\"question-box\">\n          <p>Welcome to quiz game</p>\n          <button onClick={() => this.changeScreen(1)}>Create a quiz</button>\n          <button onClick={() => this.changeScreen(2)}>Import a quiz</button>\n        </div>\n    )\n  }\n}\n\nclass QuizCreator extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      questions: [],\n      question: [\"Question\", 1, \"Answer A\", \"Answer B\", \"Answer C\", \"Answer D\"],\n      start: false,\n    }\n    this.onChange = this.onChange.bind(this);\n    this.InputBox = this.InputBox.bind(this);\n    this.addQuestion = this.addQuestion.bind(this);\n    this.setAnswer = this.setAnswer.bind(this);\n    this.startQuiz = this.startQuiz.bind(this)\n  }\n\n  onChange(value, index){\n    let question = this.state.question;\n    question[index] = value;\n    this.setState({\n         question: question,\n    });\n  }\n\n  setAnswer(index){\n    let question = this.state.question;\n    question[1] = index;\n    this.setState({\n      question: question,\n    });\n    this.render();\n  }\n\n  AnswerButton(answer, val){\n    var style = {}\n    if(val == this.state.question[1])\n      style = {backgroundColor: \"greenyellow\"}\n\n    return(\n      <button \n      className=\"question-button\"\n      style={style}\n      onClick={e => this.setAnswer(val)}\n      >\n        {this.state.question[val+1]}\n        </button>\n    )\n  }\n\n  InputBox(index){\n    return(\n      <input\n      className=\"question-create-input\"\n      type=\"text\"\n      value={this.state.question[index]}\n      onChange={e => this.onChange(e.target.value, index)}\n    />\n    )\n  }\n\n  addQuestion(){\n    let questions = this.state.questions;\n    questions.push(this.state.question)\n    this.setState({\n      questions: questions,\n      question: [\"Question\", 1, \"Answer A\", \"Answer B\", \"Answer C\", \"Answer D\"],\n    })\n  }\n\n  createCode(){\n    let questions = this.state.questions;\n    let code = \"\";\n\n    questions.forEach(question => {\n      code += \"⎙\";\n      question.forEach((element) => {\n        code += element + \"⎚\"\n      })\n    });\n    return code;\n  }\n\n  startQuiz(){\n    this.setState({\n      start: true,\n    })\n  }\n\n  render(){\n    if(this.state.start)\n      return(<QuizImport code={this.createCode()} start={true}/>)\n\n    return(\n      <>\n      <div className=\"question-box\">\n      <h1>Create a question</h1>\n        {this.InputBox(0)} <br/>\n        {this.InputBox(2)}\n        {this.InputBox(3)}\n        {this.InputBox(4)}\n        {this.InputBox(5)}\n      </div>\n\n\n      <div className=\"question-box\">\n      <h1>Question Preview</h1>\n        <p className=\"question-text\">{this.state.question[0]}</p>\n        {this.AnswerButton(this.state.question[2], 1)}\n        {this.AnswerButton(this.state.question[3], 2)}\n        {this.AnswerButton(this.state.question[4], 3)}\n        {this.AnswerButton(this.state.question[5], 4)}\n        <br/>\n        <button onClick={this.addQuestion}>Add question</button>\n        <p>Click on an answer to mark it as correct</p>\n      </div>\n\n      <div className=\"question-box\">\n        <h1>Quiz code</h1>\n        <textarea value={this.createCode()}/>\n        <p>Copy and import this quiz code to play your quiz</p>\n        <button onClick={this.startQuiz}>Import and start</button>\n      </div>\n      </>\n    )\n  }\n}\n\nclass QuizImport extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      code: \"\",\n      start: false,\n    }\n\n    this.startQuiz = this.startQuiz.bind(this)\n    \n    if(this.props.start){\n      this.state.code = this.props.code;\n      this.state.start = true;\n    }\n  }\n\n  onChange(event){\n    this.setState({\n      code: event,\n    })\n  }\n  \n  parseImport(){\n    let code = this.state.code;\n    let quiz = [];\n    let current = [];\n    let questions = code.split(\"⎙\");\n\n    questions.forEach(question => {\n      let questionSplit = question.split(\"⎚\");\n      questionSplit.forEach(element => {\n        if(element != \"\")\n          current.push(element)\n      });\n\n      if(current != \"\")\n        quiz.push(current);\n      current = [];\n    });\n    return(quiz)\n  }\n  \n  startQuiz(){\n    this.setState({\n      start: true,\n    })\n  }\n  \n  render(){\n    if(this.state.start)\n      return(<Quiz quiz={this.parseImport()}/>)\n\n    return(\n      <div className=\"question-box\">\n        <h1>Enter a quiz code</h1>\n        \n        <textarea\n              value={this.state.code}\n              onChange={e => this.onChange(e.target.value)}\n        />\n        \n        <br/>\n        <button onClick={this.startQuiz}>Import and start</button>\n      </div>\n    )\n  }\n}\n\nclass Quiz extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      current: 0,\n      questions: [[\"What color is red\", 1, \"Red\", \"Blue\", \"Left\", \"Right\"], [\"What color is blue\", 2, \"Red\", \"Blue\", \"Left\", \"Right\"]],\n      correct: 0,\n    }\n\n    this.state.questions = this.props.quiz;\n    this.checkAndIncrement = this.checkAndIncrement.bind(this);\n  }\n\n  checkAndIncrement(answer){\n    if(answer == this.state.questions[this.state.current][1]){\n      this.setState({\n        correct: this.state.correct + 1,\n      })\n    }\n\n    this.setState({\n      current: this.state.current + 1,\n    })\n  }\n\n\n  render(){\n    if(this.state.current == this.state.questions.length){\n      return(\n        <div className=\"question-box\">\n          <h1>The end</h1>\n          <h1>You scored {this.state.correct} out of {this.state.questions.length}</h1>\n        </div>\n      )\n    }\n    return(\n      <QuestionBox checkAndIncrement={this.checkAndIncrement} data={this.state.questions[this.state.current]}/>\n    )\n  }\n}\n\nclass QuestionBox extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      guess: 0,\n    }\n    this.GiveAnswer = this.GiveAnswer.bind(this);\n  }\n\n  AnswerButton(answer, val){\n    let buttonClass = \"question-button\";\n\n    if(this.props.data[1] == val && this.state.guess != 0){\n      buttonClass = \"question-button-right\"\n    } else if (this.props.data[1] != val && this.state.guess != 0){\n      buttonClass = \"question-button-wrong\"\n    }\n\n    if(answer != \"\"){\n      return(\n        <button className={buttonClass} onClick={() => this.GiveAnswer(val)}>{answer}</button>\n      )\n    }\n  }\n\n  GiveAnswer(val){\n    if(this.state.guess != 0) return;\n    this.setState({\n      guess: 1\n    })\n    \n    setTimeout(() => {\n      this.props.checkAndIncrement(val);\n      this.setState({\n        guess: 0,\n      })\n    }, 3000);\n  }\n\n  render(){\n    return(\n      <div className=\"question-box\">\n        <p className=\"question-text\">{this.props.data[0]}</p>\n        {this.AnswerButton(this.props.data[2], 1)}\n        {this.AnswerButton(this.props.data[3], 2)}\n        {this.AnswerButton(this.props.data[4], 3)}\n        {this.AnswerButton(this.props.data[5], 4)}\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}