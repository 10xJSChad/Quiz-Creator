{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","screen","this","setState","class","className","onClick","changeScreen","React","Component","QuizCreator","questions","question","start","onChange","bind","InputBox","addQuestion","setAnswer","startQuiz","value","index","render","answer","val","style","backgroundColor","e","type","target","fontSize","push","code","forEach","element","createCode","AnswerButton","QuizImport","event","quiz","current","split","parseImport","Quiz","correct","checkAndIncrement","length","data","QuestionBox","guess","GiveAnswer","buttonClass","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b08d81b5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      screen: 0,\n    }\n  }\n  \n  changeScreen(screen){\n    this.setState({\n      screen: screen,\n    })\n  }\n\n  render(){\n    //TODO: Convert to switch\n    if(this.state.screen == 1) return(<QuizCreator/>)\n    if(this.state.screen == 2) return(<QuizImport/>)\n\n    return(\n      <div class=\"background-box\">\n        <div className=\"question-box\">\n          <p className=\"title-text\">React Quiz by 10xJSChad</p>\n          <button className=\"selection-button\" onClick={() => this.changeScreen(1)}>Create a quiz</button>\n          <button className=\"selection-button\" onClick={() => this.changeScreen(2)}>Import a quiz</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass QuizCreator extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      questions: [],\n      question: [\"Question\", 1, \"Answer A\", \"Answer B\", \"Answer C\", \"Answer D\"],\n      start: false,\n    }\n    this.onChange = this.onChange.bind(this);\n    this.InputBox = this.InputBox.bind(this);\n    this.addQuestion = this.addQuestion.bind(this);\n    this.setAnswer = this.setAnswer.bind(this);\n    this.startQuiz = this.startQuiz.bind(this)\n  }\n\n  onChange(value, index){\n    let question = this.state.question;\n    question[index] = value;\n    this.setState({\n         question: question,\n    });\n  }\n\n  setAnswer(index){\n    let question = this.state.question;\n    question[1] = index;\n    this.setState({\n      question: question,\n    });\n    this.render();\n  }\n\n  AnswerButton(answer, val){\n    var style = {}\n    if(val == this.state.question[1])\n      style = {backgroundColor: \"greenyellow\"}\n\n    return(\n      <button \n      className=\"question-button\"\n      style={style}\n      onClick={e => this.setAnswer(val)}\n      >\n        {this.state.question[val+1]}\n        </button>\n    )\n  }\n\n  InputBox(index){\n    return(\n      <input\n      className=\"question-create-input\"\n      type=\"text\"\n      value={this.state.question[index]}\n      onChange={e => this.onChange(e.target.value, index)}\n      style={{fontSize: 15}}\n    />\n    )\n  }\n\n  addQuestion(){\n    let questions = this.state.questions;\n    questions.push(this.state.question)\n    this.setState({\n      questions: questions,\n      question: [\"Question\", 1, \"Answer A\", \"Answer B\", \"Answer C\", \"Answer D\"],\n    })\n  }\n\n  createCode(){\n    let questions = this.state.questions;\n    let code = \"\";\n\n    questions.forEach(question => {\n      code += \"⎙\";\n      question.forEach((element) => {\n        code += element + \"⎚\"\n      })\n    });\n    return code;\n  }\n\n  startQuiz(){\n    this.setState({\n      start: true,\n    })\n  }\n\n  render(){\n    if(this.state.start)\n      return(<QuizImport code={this.createCode()} start={true}/>)\n\n    return(\n      <>\n      <div className=\"background-box\">\n        <div className=\"question-box\">\n        <h1>Quiz Creator</h1>\n          {this.InputBox(0)} <br/>\n          {this.InputBox(2)}\n          {this.InputBox(3)}\n          {this.InputBox(4)}\n          {this.InputBox(5)}\n        </div>\n\n\n        <div className=\"question-box\">\n          <p className=\"under-text\">{this.state.question[0]}</p>\n          <div className=\"question-button-box\">\n            {this.AnswerButton(this.state.question[2], 1)}\n            {this.AnswerButton(this.state.question[3], 2)}\n            {this.AnswerButton(this.state.question[4], 3)}\n            {this.AnswerButton(this.state.question[5], 4)}\n          </div>\n          <p className=\"under-text\" style={{fontSize: 20}}>Click on an answer to mark it as correct</p>\n          <button className=\"selection-button\" style={{fontSize: 20}} onClick={this.addQuestion}>Add question</button>\n          <br/>\n        </div>\n\n        <div className=\"question-box\">\n          <h1>Quiz code</h1>\n          <textarea value={this.createCode()}/>\n          <p className=\"under-text\" style={{fontSize: 20}}>Copy and import this quiz code to play your quiz</p>\n          <button className=\"selection-button\" onClick={this.startQuiz}>Import and start</button>\n        </div>\n      </div>\n      </>\n    )\n  }\n}\n\nclass QuizImport extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      code: \"\",\n      start: false,\n    }\n\n    this.startQuiz = this.startQuiz.bind(this)\n    \n    if(this.props.start){\n      this.state.code = this.props.code;\n      this.state.start = true;\n    }\n  }\n\n  onChange(event){\n    this.setState({\n      code: event,\n    })\n  }\n  \n  parseImport(){\n    let code = this.state.code;\n    let quiz = [];\n    let current = [];\n    let questions = code.split(\"⎙\");\n\n    questions.forEach(question => {\n      let questionSplit = question.split(\"⎚\");\n      questionSplit.forEach(element => {\n        if(element != \"\")\n          current.push(element)\n      });\n\n      if(current != \"\")\n        quiz.push(current);\n      current = [];\n    });\n    return(quiz)\n  }\n  \n  startQuiz(){\n    this.setState({\n      start: true,\n    })\n  }\n  \n  render(){\n    if(this.state.start)\n      return(<Quiz quiz={this.parseImport()}/>)\n\n    return(\n      <div className=\"background-box\">\n        <div className=\"question-box\">\n          <h1>Enter a quiz code</h1>\n          \n          <textarea\n                value={this.state.code}\n                onChange={e => this.onChange(e.target.value)}\n          />\n          \n          <br/>\n          <br/>\n          <button className=\"selection-button\" onClick={this.startQuiz}>Import and start</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Quiz extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      current: 0,\n      questions: [[\"What color is red\", 1, \"Red\", \"Blue\", \"Left\", \"Right\"], [\"What color is blue\", 2, \"Red\", \"Blue\", \"Left\", \"Right\"]],\n      correct: 0,\n    }\n\n    this.state.questions = this.props.quiz;\n    this.checkAndIncrement = this.checkAndIncrement.bind(this);\n  }\n\n  checkAndIncrement(answer){\n    if(answer == this.state.questions[this.state.current][1]){\n      this.setState({\n        correct: this.state.correct + 1,\n      })\n    }\n\n    this.setState({\n      current: this.state.current + 1,\n    })\n  }\n\n\n  render(){\n    if(this.state.current == this.state.questions.length){\n      return(\n        <div className=\"background-box\">\n          <div className=\"question-box\">\n            <h1>The end</h1>\n            <h1>You scored {this.state.correct} out of {this.state.questions.length}</h1>\n          </div>\n        </div>\n      )\n    }\n    return(\n      <QuestionBox checkAndIncrement={this.checkAndIncrement} data={this.state.questions[this.state.current]}/>\n    )\n  }\n}\n\nclass QuestionBox extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      guess: 0,\n    }\n    this.GiveAnswer = this.GiveAnswer.bind(this);\n  }\n\n  AnswerButton(answer, val){\n    let buttonClass = \"question-button\";\n\n    if(this.props.data[1] == val && this.state.guess != 0){\n      buttonClass = \"question-button-right\"\n    } else if (this.props.data[1] != val && this.state.guess != 0){\n      buttonClass = \"question-button-wrong\"\n    }\n\n    if(answer != \"\"){\n      return(\n        <button className={buttonClass} onClick={() => this.GiveAnswer(val)}>{answer}</button>\n      )\n    }\n  }\n\n  GiveAnswer(val){\n    if(this.state.guess != 0) return;\n    this.setState({\n      guess: 1\n    })\n    \n    setTimeout(() => {\n      this.props.checkAndIncrement(val);\n      this.setState({\n        guess: 0,\n      })\n    }, 3000);\n  }\n\n  render(){\n    return(\n      <div className=\"background-box\">\n        <div className=\"question-box\">\n          <p className=\"title-text\">{this.props.data[0]}</p>\n          {this.AnswerButton(this.props.data[2], 1)}\n          {this.AnswerButton(this.props.data[3], 2)}\n          {this.AnswerButton(this.props.data[4], 3)}\n          {this.AnswerButton(this.props.data[5], 4)}\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}